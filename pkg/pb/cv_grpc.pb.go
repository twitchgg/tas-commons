// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.2
// source: pkg/proto/cv.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CommonViewDataServiceClient is the client API for CommonViewDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CommonViewDataServiceClient interface {
	PushMainStationData(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (CommonViewDataService_PushMainStationDataClient, error)
}

type commonViewDataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommonViewDataServiceClient(cc grpc.ClientConnInterface) CommonViewDataServiceClient {
	return &commonViewDataServiceClient{cc}
}

func (c *commonViewDataServiceClient) PushMainStationData(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (CommonViewDataService_PushMainStationDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &CommonViewDataService_ServiceDesc.Streams[0], "/CommonViewDataService/PushMainStationData", opts...)
	if err != nil {
		return nil, err
	}
	x := &commonViewDataServicePushMainStationDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CommonViewDataService_PushMainStationDataClient interface {
	Recv() (*CommonViewRawData, error)
	grpc.ClientStream
}

type commonViewDataServicePushMainStationDataClient struct {
	grpc.ClientStream
}

func (x *commonViewDataServicePushMainStationDataClient) Recv() (*CommonViewRawData, error) {
	m := new(CommonViewRawData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CommonViewDataServiceServer is the server API for CommonViewDataService service.
// All implementations should embed UnimplementedCommonViewDataServiceServer
// for forward compatibility
type CommonViewDataServiceServer interface {
	PushMainStationData(*PushRequest, CommonViewDataService_PushMainStationDataServer) error
}

// UnimplementedCommonViewDataServiceServer should be embedded to have forward compatible implementations.
type UnimplementedCommonViewDataServiceServer struct {
}

func (UnimplementedCommonViewDataServiceServer) PushMainStationData(*PushRequest, CommonViewDataService_PushMainStationDataServer) error {
	return status.Errorf(codes.Unimplemented, "method PushMainStationData not implemented")
}

// UnsafeCommonViewDataServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CommonViewDataServiceServer will
// result in compilation errors.
type UnsafeCommonViewDataServiceServer interface {
	mustEmbedUnimplementedCommonViewDataServiceServer()
}

func RegisterCommonViewDataServiceServer(s grpc.ServiceRegistrar, srv CommonViewDataServiceServer) {
	s.RegisterService(&CommonViewDataService_ServiceDesc, srv)
}

func _CommonViewDataService_PushMainStationData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PushRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CommonViewDataServiceServer).PushMainStationData(m, &commonViewDataServicePushMainStationDataServer{stream})
}

type CommonViewDataService_PushMainStationDataServer interface {
	Send(*CommonViewRawData) error
	grpc.ServerStream
}

type commonViewDataServicePushMainStationDataServer struct {
	grpc.ServerStream
}

func (x *commonViewDataServicePushMainStationDataServer) Send(m *CommonViewRawData) error {
	return x.ServerStream.SendMsg(m)
}

// CommonViewDataService_ServiceDesc is the grpc.ServiceDesc for CommonViewDataService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CommonViewDataService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "CommonViewDataService",
	HandlerType: (*CommonViewDataServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PushMainStationData",
			Handler:       _CommonViewDataService_PushMainStationData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/proto/cv.proto",
}
